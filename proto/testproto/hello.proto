// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option go_package = "github.com/douyu/jupiter;testproto";

package testproto;

import "google/api/annotations.proto";

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {
    option (google.api.http) = {
      post: "/v1/helloworld.Greeter/SayHello"
      body: "*"
    };
  }
  rpc WhoServer (WhoServerReq) returns (WhoServerReply) {
    option (google.api.http) = {
      post: "/v1/helloworld.Greeter/WhoServer"
      body: "*"
    };
  }
  rpc StreamHello (stream HelloRequest) returns (stream HelloReply){
    option (google.api.http) = {
      post: "/v1/helloworld.Greeter/StreamHello"
      body: "*"
    };
  }
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

message WhoServerReq{
}
message WhoServerReply{
    string message = 1;
}
// The response message containing the greetings
message HelloReply {
  string message = 1;
  int64 id64 = 2;
  int32 id32 = 3;
  uint64 idu64 = 4;
  uint32 idu32 = 5;
  bytes name = 6;
  bool done = 7;
}