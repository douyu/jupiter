// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// UuidInterface is an autogenerated mock type for the UuidInterface type
type UuidInterface struct {
	mock.Mock
}

// GetUuidByGoogleUUIDV4 provides a mock function with given fields: ctx
func (_m *UuidInterface) GetUuidByGoogleUUIDV4(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetUuidBySnowflake provides a mock function with given fields: ctx
func (_m *UuidInterface) GetUuidBySnowflake(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewUuidInterface creates a new instance of UuidInterface. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewUuidInterface(t testing.TB) *UuidInterface {
	mock := &UuidInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
