name: Go

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        go: ["1.18.x", "1.19.x"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3.1.0

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Get dependencies
        run: |
          go env
          go get -v -t -d ./...

      - uses: actions/checkout@v3.1.0

      - name: Build
        run: go build -v .

  test:
    name: Test on ubuntu
    strategy:
      fail-fast: false
      matrix:
        go: ["1.18.x", "1.19.x"]
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3.1.0

      - name: docker-compose
        run: docker-compose -f test/docker-compose.yaml up -d

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Get dependencies
        run: |
          go env
          go get -v -t -d ./...

      - name: Test
        run: |
          go test -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
